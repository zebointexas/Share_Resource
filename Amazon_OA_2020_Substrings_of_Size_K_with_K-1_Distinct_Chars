package Amazon_2020.Experienced;

import java.util.*;

public class Substrings_of_Size_K_with_K_1_Distinct_Chars {

    public static void main(String[] args) {


        String s2 = "democracy";
        int k2 = 5;

        String s3 = "wawaglknagagwunagkwkwagl";
        int k3 = 4;


        System.out.println(solve(s2, k2));
        System.out.println(solve(s3, k3));
    }

    private static List<String> solve(String s, int k) {

        Map<Character, Integer> map = new HashMap<>();

        List<String> res = new LinkedList<>();

        int left = 0;

        for(int right = 0; right< s.length(); right++) {

            while(right - left + 1> k) {
                char c = s.charAt(left++);
                map.put(c, map.get(c) - 1);
                if(map.get(c) == 0)
                    map.remove(c);
            }

            char c = s.charAt(right);

            map.put(c, map.getOrDefault(c, 0) + 1);

            if(right - left == k - 1 && map.entrySet().size() == k - 1) {

                res.add( toString(s, left, right) );

            }

        }

        return res;
    }

    public static String toString(String s, int left, int right){

        StringBuilder sb = new StringBuilder();

        for(int i = left; i <= right; i++){

            sb.append( s.charAt(i) ) ;

        }

        return sb.toString();
    }

}
